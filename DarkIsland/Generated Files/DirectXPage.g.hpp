//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "DirectXPage.xaml.h"

void ::Game::DirectXPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///DirectXPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}

void ::Game::DirectXPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->DXSwapChainPanel = safe_cast<::Windows::UI::Xaml::Controls::SwapChainPanel^>(__target);
        }
        break;
    case 3:
        {
            this->GameInfoOverlayStates = safe_cast<::Windows::UI::Xaml::VisualStateGroup^>(__target);
        }
        break;
    case 4:
        {
            this->NormalState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
        }
        break;
    case 5:
        {
            this->GameInfoOverlayState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
        }
        break;
    case 6:
        {
            this->TooSmallState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
        }
        break;
    case 7:
        {
            this->NotTooSmallState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
        }
        break;
    case 8:
        {
            this->GamePlayInfo = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 9:
        {
            this->TooSmallView = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 10:
        {
            this->GameInfoOverlay = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(this->GameInfoOverlay))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnContinueTapped);
        }
        break;
    case 11:
        {
            this->StoreFlyout = safe_cast<::Windows::UI::Xaml::Controls::Primitives::Popup^>(__target);
        }
        break;
    case 12:
        {
            this->GameOptions = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 13:
        {
            this->GameMenu = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 14:
        {
            this->option1b = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option1b))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnCloseThisTapped);
        }
        break;
    case 15:
        {
            this->option1 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option1))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnContinueTapped);
        }
        break;
    case 16:
        {
            this->option12 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option12))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnSettingsTapped);
        }
        break;
    case 17:
        {
            this->option2 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option2))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnNextLevelClicked);
        }
        break;
    case 18:
        {
            this->option3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option3))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::ExitTapped);
        }
        break;
    case 19:
        {
            this->option1b2 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option1b2))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnCloseThisTapped);
        }
        break;
    case 20:
        {
            this->option32 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->option32))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::ExitTapped2);
        }
        break;
    case 21:
        {
            this->draw_distance = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->draw_distance))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::Slider_ValueChanged);
        }
        break;
    case 22:
        {
            this->fxaa_value = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(this->fxaa_value))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::fxaa_change);
        }
        break;
    case 23:
        {
            this->StoreGrid = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 24:
        {
            this->StoreUnavailable = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 25:
        {
            this->ProductListView = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
        }
        break;
    case 27:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element27 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element27))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::OnBuySelectorClicked);
        }
        break;
    case 28:
        {
            this->Return = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(this->Return))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::OnStoreReturnClicked);
        }
        break;
    case 29:
        {
            this->Loading = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 30:
        {
            this->Stats = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 31:
        {
            this->PleaseWait = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 32:
        {
            this->PlayAgain = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 33:
        {
            this->HighScoreTitle = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 34:
        {
            this->HighScoreData = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 35:
        {
            this->PurchaseUpgrade = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 36:
        {
            this->BuyFull = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(this->BuyFull))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnBuyAppButtonTapped);
        }
        break;
    case 37:
        {
            this->PurchaseMessage = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 38:
        {
            this->HighScore = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 39:
        {
            this->TotalShots = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 40:
        {
            this->TotalPoints = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 41:
        {
            this->LevelsCompleted = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 42:
        {
            this->LoadingProgress = safe_cast<::Windows::UI::Xaml::Controls::ProgressRing^>(__target);
        }
        break;
    case 43:
        {
            this->GameInfoOverlayTitle = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 44:
        {
            this->BonusTimeTitle = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 45:
        {
            this->right_cols = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 46:
        {
            this->sambr = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sambr))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sambr_ValueChanged);
        }
        break;
    case 47:
        {
            this->sambg = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sambg))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sambg_ValueChanged);
        }
        break;
    case 48:
        {
            this->sambb = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sambb))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sambb_ValueChanged);
        }
        break;
    case 49:
        {
            this->sdiffr = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffr))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffr_ValueChanged);
        }
        break;
    case 50:
        {
            this->sdiffg = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffg))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffg_ValueChanged);
        }
        break;
    case 51:
        {
            this->sdiffb = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffb))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffb_ValueChanged);
        }
        break;
    case 52:
        {
            this->sambsky = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sambsky))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sambsky_ValueChanged);
        }
        break;
    case 53:
        {
            this->sdiffsky = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffsky))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffsky_ValueChanged);
        }
        break;
    case 54:
        {
            this->sskybright = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sskybright))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sskybright_ValueChanged);
        }
        break;
    case 55:
        {
            this->sdiffx = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffx))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffx_ValueChanged);
        }
        break;
    case 56:
        {
            this->sdiffy = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffy))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffy_ValueChanged);
        }
        break;
    case 57:
        {
            this->sdiffz = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sdiffz))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sdiffz_ValueChanged);
        }
        break;
    case 58:
        {
            this->sspecr = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sspecr))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sspecr_ValueChanged);
        }
        break;
    case 59:
        {
            this->sspecg = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sspecg))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sspecg_ValueChanged);
        }
        break;
    case 60:
        {
            this->sspecb = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sspecb))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sspecb_ValueChanged);
        }
        break;
    case 61:
        {
            this->sspecpow = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sspecpow))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sspecpow_ValueChanged);
        }
        break;
    case 62:
        {
            this->slider_controls = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 63:
        {
            this->PauseData = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 64:
        {
            this->LevelStart = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
        }
        break;
    case 65:
        {
            this->BonusTimeData = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 66:
        {
            this->BonusTime = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 67:
        {
            this->TimeLimit = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 68:
        {
            this->Objective = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 69:
        {
            this->sliderrr = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sliderrr))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sliderrr_ValueChanged);
        }
        break;
    case 70:
        {
            this->sliderrg = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sliderrg))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sliderrg_ValueChanged);
        }
        break;
    case 71:
        {
            this->sliderrb = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->sliderrb))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::sliderrb_ValueChanged);
        }
        break;
    case 72:
        {
            this->col_view = safe_cast<::Windows::UI::Xaml::Controls::Border^>(__target);
        }
        break;
    case 73:
        {
            this->combo1 = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(this->combo1))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::skybox_changed);
        }
        break;
    case 74:
        {
            ::Windows::UI::Xaml::Controls::Button^ element74 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element74))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Button_Click);
        }
        break;
    case 75:
        {
            ::Windows::UI::Xaml::Controls::Button^ element75 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element75))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::ButtonStuff_Click);
        }
        break;
    case 76:
        {
            ::Windows::UI::Xaml::Controls::Button^ element76 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element76))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::player_start);
        }
        break;
    case 77:
        {
            ::Windows::UI::Xaml::Controls::Button^ element77 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element77))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::diff_from_camera);
        }
        break;
    case 78:
        {
            this->TapToContinue = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(this->TapToContinue))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DirectXPage::OnGameInfoOverlayTapped);
        }
        break;
    case 79:
        {
            this->deleteradius = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Slider^>(this->deleteradius))->ValueChanged += ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::deleteradius_ValueChanged);
        }
        break;
    case 80:
        {
            this->b_edasplay = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(this->b_edasplay))->Toggled += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::togglee_edasplay);
        }
        break;
    case 81:
        {
            this->b_fly = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(this->b_fly))->Toggled += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::togglee_fly);
        }
        break;
    case 82:
        {
            this->b_fog = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(this->b_fog))->Toggled += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::togglee_fog);
        }
        break;
    case 83:
        {
            this->b_rain = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(this->b_rain))->Toggled += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::togglee_rain);
        }
        break;
    case 84:
        {
            this->b_snow = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(this->b_snow))->Toggled += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::togglee_snow);
        }
        break;
    case 85:
        {
            this->combo2 = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(this->combo2))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::itemtype_changed);
        }
        break;
    case 86:
        {
            this->dat1 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 87:
        {
            this->dat2 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 88:
        {
            this->dat3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 89:
        {
            this->dat4 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 90:
        {
            this->dat5 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 91:
        {
            this->dat6 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 92:
        {
            this->dat7 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 93:
        {
            this->dat8 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 94:
        {
            this->dat9 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 95:
        {
            this->dat10 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 96:
        {
            this->dat11 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 97:
        {
            this->dat12 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 98:
        {
            this->dat13 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 99:
        {
            this->dat14 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 100:
        {
            this->dat15 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 101:
        {
            this->dat16 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 102:
        {
            this->dat17 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 103:
        {
            this->dat18 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 104:
        {
            this->GameAppBar = safe_cast<::Windows::UI::Xaml::Controls::AppBar^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBar^>(this->GameAppBar))->Opened += ref new ::Windows::Foundation::EventHandler<::Platform::Object^>(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Platform::Object^))&DirectXPage::OnAppBarOpened);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBar^>(this->GameAppBar))->Closed += ref new ::Windows::Foundation::EventHandler<::Platform::Object^>(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Platform::Object^))&DirectXPage::OnAppBarClosed);
        }
        break;
    case 105:
        {
            this->Play = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(this->Play))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::OnPlayButtonClicked);
        }
        break;
    case 106:
        {
            this->NextLev = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(this->NextLev))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::Game::DirectXPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::OnNextLevelClicked);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Game::DirectXPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    __connectionId;         // unreferenced
    __target;               // unreferenced
    return nullptr;
}

#pragma warning(pop)


